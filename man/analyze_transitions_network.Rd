% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggraph_transitions.R
\name{analyze_transitions_network}
\alias{analyze_transitions_network}
\title{Analyze Network Structure from Transitions Data}
\usage{
analyze_transitions_network(
  transitions_data,
  input_format = "data.table",
  min_edge_weight = 1,
  directed = TRUE,
  compute_communities = TRUE,
  return_tidygraph = FALSE,
  use_consolidated_periods = TRUE,
  consolidation_type = "both",
  transition_variable = "prior"
)
}
\arguments{
\item{transitions_data}{Data.table output from analyze_employment_transitions()}

\item{input_format}{Character. Format of input data: "data.table" or "matrix" (default: "data.table")}

\item{min_edge_weight}{Numeric. Minimum edge weight to include (default: 1)}

\item{directed}{Logical. Treat as directed network (default: TRUE)}

\item{compute_communities}{Logical. Compute community structure (default: TRUE)}

\item{return_tidygraph}{Logical. Return tidygraph object instead of summary (default: FALSE)}
}
\value{
List with network analysis results or tidygraph object
}
\description{
Analyzes the network structure of employment transitions to provide insights
about connectivity, centrality, and community structure. Useful for understanding
employment flow patterns and identifying key states.
}
\examples{
\dontrun{
# Analyze consolidated network structure (default)
network_analysis <- analyze_transitions_network(pipeline_result)
print(network_analysis)

# Get tidygraph object for further analysis with overlapping consolidation only
tg <- analyze_transitions_network(pipeline_result, return_tidygraph = TRUE,
                                 consolidation_type = "overlapping")

# Analyze pre-computed transitions without consolidation
transitions <- analyze_employment_transitions(pipeline_result, use_consolidated_periods = FALSE)
network_analysis_raw <- analyze_transitions_network(transitions, use_consolidated_periods = FALSE)
}
}
