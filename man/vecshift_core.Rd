% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vecshift_core.R
\name{vecshift_core}
\alias{vecshift_core}
\title{Minimal High-Performance Employment Transformation Core}
\usage{
vecshift_core(dt)
}
\arguments{
\item{dt}{A data.table containing employment contract records with required columns:
\itemize{
  \item{\code{cf}}: Person identifier
  \item{\code{inizio}}: Contract start date (Date or numeric)
  \item{\code{fine}}: Contract end date (Date or numeric) 
  \item{\code{prior}}: Employment type (0/negative = part-time, positive = full-time)
  \item{\code{id}}: Contract identifier
}}
}
\value{
A data.table with temporal segments containing:
  \itemize{
    \item{\code{cf}}: Person identifier
    \item{\code{inizio}}: Segment start date
    \item{\code{fine}}: Segment end date
    \item{\code{arco}}: Number of overlapping contracts (0 = unemployment)
    \item{\code{prior}}: Employment type for the segment
    \item{\code{id}}: Contract ID (0 for unemployment periods)
    \item{\code{durata}}: Duration of the segment
    \item{\code{stato}}: Employment status classification
  }
}
\description{
This is the absolute fastest implementation for transforming employment records
into temporal segments. Contains only the essential event-based logic with minimal
overhead. Use this for production workloads requiring maximum performance.
}
\details{
This core function implements the fastest possible event-based temporal transformation.
It assumes input data is already validated and uses standardized column names.
No error checking or validation is performed for maximum speed.

The algorithm:
1. Creates start events (value=1) and end events (value=-1, date=fine+1)
2. Sorts events by person and date
3. Uses cumulative sum to track overlapping contracts (arco)
4. Creates segments between consecutive events
5. Classifies employment states based on arco and prior values
}
\examples{
\dontrun{
library(data.table)
dt <- data.table(
  cf = c("A001", "A001", "B002"),
  inizio = as.Date(c("2023-01-01", "2023-06-01", "2023-02-01")),
  fine = as.Date(c("2023-05-31", "2023-12-31", "2023-11-30")),
  prior = c(1, 0, 1),
  id = 1:3
)
result <- vecshift_core(dt)
}
}
