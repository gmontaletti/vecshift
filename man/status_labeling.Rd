% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/status_labeling.R
\name{status_labeling}
\alias{status_labeling}
\title{Employment Status Classification Module}
\description{
Enhanced flexible employment status classification system for temporal employment
segments. Features sequence-based overlap labeling, flexible prior value mapping,
and customizable rules for diverse business contexts.
}
\details{
**Enhanced Capabilities (Version 1.0+)**:

1. **Flexible Prior Value System**: No longer normalizes prior values to 0/1.
   Supports any numeric employment type codes through custom prior_labels mapping.

2. **Sequence-Based Overlap Labeling**: Creates descriptive labels for overlapping
   employment periods based on chronological sequence of employment types.
   Example: overlapping periods with prior values [0, 1, 2] become "over_pt_ft_fixed".

3. **Unknown Prior Handling**: Automatically handles unmapped prior values by
   using their numeric representation (e.g., "occ_7" for unknown prior value 7).

4. **Custom Business Logic**: Supports industry-specific employment type
   classifications through the prior_labels parameter.

5. **Backward Compatibility**: Maintains full compatibility with existing
   vecshift workflows while enabling new flexible features.

**Core Functions**:
- \\code{\\link{classify_employment_status}}: Main classification function with enhanced flexibility
- \\code{\\link{get_default_status_rules}}: Returns default rules including flexible prior mappings
- \\code{\\link{create_custom_status_rules}}: Creates custom rules with prior_labels support
- \\code{\\link{analyze_status_patterns}}: Analyzes employment status patterns
- \\code{\\link{validate_status_classifications}}: Validates classification results

**Usage Patterns**:
- Use default rules for standard employment analysis
- Create custom prior_labels for industry-specific employment type codes
- Leverage sequence-based labeling for complex overlapping employment analysis
- Apply validation functions to ensure classification integrity
}
